/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/admin/app.js":
/*!***********************************!*\
  !*** ./resources/js/admin/app.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("__webpack_require__(/*! ./main.js */ \"./resources/js/admin/main.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYWRtaW4vYXBwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxtQkFBTyxDQUFDLCtDQUFXLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmxpbmVtYXJ0Ly4vcmVzb3VyY2VzL2pzL2FkbWluL2FwcC5qcz85MzQ2Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vbWFpbi5qcycpO1xuIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/admin/app.js\n");

/***/ }),

/***/ "./resources/js/admin/main.js":
/*!************************************!*\
  !*** ./resources/js/admin/main.js ***!
  \************************************/
/***/ (function() {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * Template Name: NiceAdmin\n * Updated: Mar 09 2023 with Bootstrap v5.2.3\n * Template URL:\n * https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ Author:\n * BootstrapMade.com License: https://bootstrapmade.com/license/\n */\n(function () {\n  \"use strict\";\n\n  /**\n   * Easy selector helper function\n   */\n  var select = function select(el) {\n    var all = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    el = el.trim();\n    if (all) {\n      return _toConsumableArray(document.querySelectorAll(el));\n    } else {\n      return document.querySelector(el);\n    }\n  };\n\n  /**\n   * Easy event listener function\n   */\n  var on = function on(type, el, listener) {\n    var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (all) {\n      select(el, all).forEach(function (e) {\n        return e.addEventListener(type, listener);\n      });\n    } else {\n      select(el, all).addEventListener(type, listener);\n    }\n  };\n\n  /**\n   * Easy on scroll event listener\n   */\n  var onscroll = function onscroll(el, listener) {\n    el.addEventListener('scroll', listener);\n  };\n\n  /**\n   * Sidebar toggle\n   */\n  if (select('.toggle-sidebar-btn')) {\n    on('click', '.toggle-sidebar-btn', function (e) {\n      select('body').classList.toggle('toggle-sidebar');\n    });\n  }\n\n  /**\n   * Search bar toggle\n   */\n  if (select('.search-bar-toggle')) {\n    on('click', '.search-bar-toggle', function (e) {\n      select('.search-bar').classList.toggle('search-bar-show');\n    });\n  }\n\n  /**\n   * Navbar links active state on scroll\n   */\n  var navbarlinks = select('#navbar .scrollto', true);\n  var navbarlinksActive = function navbarlinksActive() {\n    var position = window.scrollY + 200;\n    navbarlinks.forEach(function (navbarlink) {\n      if (!navbarlink.hash) {\n        return;\n      }\n      var section = select(navbarlink.hash);\n      if (!section) {\n        return;\n      }\n      if (position >= section.offsetTop && position <= section.offsetTop + section.offsetHeight) {\n        navbarlink.classList.add('active');\n      } else {\n        navbarlink.classList.remove('active');\n      }\n    });\n  };\n  window.addEventListener('load', navbarlinksActive);\n  onscroll(document, navbarlinksActive);\n\n  /**\n   * Toggle .header-scrolled class to #header when page is scrolled\n   */\n  var selectHeader = select('#header');\n  if (selectHeader) {\n    var headerScrolled = function headerScrolled() {\n      if (window.scrollY > 100) {\n        selectHeader.classList.add('header-scrolled');\n      } else {\n        selectHeader.classList.remove('header-scrolled');\n      }\n    };\n    window.addEventListener('load', headerScrolled);\n    onscroll(document, headerScrolled);\n  }\n\n  /**\n   * Back to top button\n   */\n  var backtotop = select('.back-to-top');\n  if (backtotop) {\n    var toggleBacktotop = function toggleBacktotop() {\n      if (window.scrollY > 100) {\n        backtotop.classList.add('active');\n      } else {\n        backtotop.classList.remove('active');\n      }\n    };\n    window.addEventListener('load', toggleBacktotop);\n    onscroll(document, toggleBacktotop);\n  }\n\n  /**\n   * Initiate tooltips\n   */\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n  var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n  });\n\n  /**\n   * Initiate quill editors\n   */\n  if (select('.quill-editor-default')) {\n    new Quill('.quill-editor-default', {\n      theme: 'snow'\n    });\n  }\n  if (select('.quill-editor-bubble')) {\n    new Quill('.quill-editor-bubble', {\n      theme: 'bubble'\n    });\n  }\n  if (select('.quill-editor-full')) {\n    new Quill(\".quill-editor-full\", {\n      modules: {\n        toolbar: [[{\n          font: []\n        }, {\n          size: []\n        }], [\"bold\", \"italic\", \"underline\", \"strike\"], [{\n          color: []\n        }, {\n          background: []\n        }], [{\n          script: \"super\"\n        }, {\n          script: \"sub\"\n        }], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }, {\n          indent: \"-1\"\n        }, {\n          indent: \"+1\"\n        }], [\"direction\", {\n          align: []\n        }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n      },\n      theme: \"snow\"\n    });\n  }\n\n  /**\n   * Initiate TinyMCE Editor\n   */\n  var useDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  var isSmallScreen = window.matchMedia('(max-width: 1023.5px)').matches;\n  tinymce.init({\n    selector: 'textarea#editor',\n    plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',\n    editimage_cors_hosts: ['picsum.photos'],\n    menubar: 'file edit view insert format tools table help',\n    toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',\n    toolbar_sticky: true,\n    toolbar_sticky_offset: isSmallScreen ? 102 : 108,\n    autosave_ask_before_unload: true,\n    autosave_interval: '30s',\n    autosave_prefix: '{path}{query}-{id}-',\n    autosave_restore_when_empty: false,\n    autosave_retention: '2m',\n    image_advtab: true,\n    link_list: [{\n      title: 'My page 1',\n      value: 'https://www.tiny.cloud'\n    }, {\n      title: 'My page 2',\n      value: 'http://www.moxiecode.com'\n    }],\n    image_list: [{\n      title: 'My page 1',\n      value: 'https://www.tiny.cloud'\n    }, {\n      title: 'My page 2',\n      value: 'http://www.moxiecode.com'\n    }],\n    image_class_list: [{\n      title: 'None',\n      value: ''\n    }, {\n      title: 'Some class',\n      value: 'class-name'\n    }],\n    importcss_append: true,\n    file_picker_callback: function file_picker_callback(callback, value, meta) {\n      /* Provide file and text for the link dialog */\n      if (meta.filetype === 'file') {\n        callback('https://www.google.com/logos/google.jpg', {\n          text: 'My text'\n        });\n      }\n\n      /* Provide image and alt text for the image dialog */\n      if (meta.filetype === 'image') {\n        callback('https://www.google.com/logos/google.jpg', {\n          alt: 'My alt text'\n        });\n      }\n\n      /* Provide alternative source and posted for the media dialog */\n      if (meta.filetype === 'media') {\n        callback('movie.mp4', {\n          source2: 'alt.ogg',\n          poster: 'https://www.google.com/logos/google.jpg'\n        });\n      }\n    },\n    templates: [{\n      title: 'New Table',\n      description: 'creates a new table',\n      content: '<div class=\"mceTmpl\"><table width=\"98%%\"  border=\"0\" cellspacing=\"0\" cellpadding=\"0\"><tr><th scope=\"col\"> </th><th scope=\"col\"> </th></tr><tr><td> </td><td> </td></tr></table></div>'\n    }, {\n      title: 'Starting my story',\n      description: 'A cure for writers block',\n      content: 'Once upon a time...'\n    }, {\n      title: 'New list with dates',\n      description: 'New List with dates',\n      content: '<div class=\"mceTmpl\"><span class=\"cdate\">cdate</span><br><span class=\"mdate\">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>'\n    }],\n    template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',\n    template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]',\n    height: 600,\n    image_caption: true,\n    quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',\n    noneditable_class: 'mceNonEditable',\n    toolbar_mode: 'sliding',\n    contextmenu: 'link image table',\n    skin: useDarkMode ? 'oxide-dark' : 'oxide',\n    content_css: useDarkMode ? 'dark' : 'default',\n    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'\n  });\n\n  /**\n   * Initiate Bootstrap validation check\n   */\n  var needsValidation = document.querySelectorAll('.needs-validation');\n  Array.prototype.slice.call(needsValidation).forEach(function (form) {\n    form.addEventListener('submit', function (event) {\n      if (!form.checkValidity()) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      form.classList.add('was-validated');\n    }, false);\n  });\n\n  /**\n   * Initiate Datatables\n   */\n  var datatables = select('.datatable', true);\n  datatables.forEach(function (datatable) {\n    new simpleDatatables.DataTable(datatable);\n  });\n\n  /**\n   * Autoresize echart charts\n   */\n  var mainContainer = select('#main');\n  if (mainContainer) {\n    setTimeout(function () {\n      new ResizeObserver(function () {\n        select('.echart', true).forEach(function (getEchart) {\n          echarts.getInstanceByDom(getEchart).resize();\n        });\n      }).observe(mainContainer);\n    }, 200);\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/admin/app.js");
/******/ 	
/******/ })()
;